{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3020';\nexport const fetchEquipments = async filters => {\n  try {\n    const params = {};\n    if (filters.category) params.category = filters.category;\n    if (filters.brand) params.brand = filters.brand;\n    if (filters.priceRange) {\n      const [minPrice, maxPrice] = filters.priceRange.split('-').map(Number);\n      if (!isNaN(minPrice) && !isNaN(maxPrice)) {\n        params.minPrice = minPrice;\n        params.maxPrice = maxPrice;\n      }\n    }\n    if (filters.searchQuery) params.searchQuery = filters.searchQuery;\n    const response = await axios.get(`${API_BASE_URL}/equipments`, {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching equipments:', error.message);\n    throw error;\n  }\n};\nexport const fetchEquipmentById = async id => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/equipments/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching equipment by ID:', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchEquipments","filters","params","category","brand","priceRange","minPrice","maxPrice","split","map","Number","isNaN","searchQuery","response","get","data","error","console","message","fetchEquipmentById","id"],"sources":["/Users/nataliafetych/Downloads/web-lab-10/my-app/src/server.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:3020';\n\nexport const fetchEquipments = async (filters) => {\n  try {\n    const params = {};\n    if (filters.category) params.category = filters.category;\n    if (filters.brand) params.brand = filters.brand;\n    if (filters.priceRange) {\n      const [minPrice, maxPrice] = filters.priceRange.split('-').map(Number);\n      if (!isNaN(minPrice) && !isNaN(maxPrice)) {\n        params.minPrice = minPrice;\n        params.maxPrice = maxPrice;\n      }\n    }\n    if (filters.searchQuery) params.searchQuery = filters.searchQuery;\n\n    const response = await axios.get(`${API_BASE_URL}/equipments`, { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching equipments:', error.message);\n    throw error;\n  }\n};\n\nexport const fetchEquipmentById = async (id) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/equipments/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching equipment by ID:', error.message);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,IAAID,OAAO,CAACE,QAAQ,EAAED,MAAM,CAACC,QAAQ,GAAGF,OAAO,CAACE,QAAQ;IACxD,IAAIF,OAAO,CAACG,KAAK,EAAEF,MAAM,CAACE,KAAK,GAAGH,OAAO,CAACG,KAAK;IAC/C,IAAIH,OAAO,CAACI,UAAU,EAAE;MACtB,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGN,OAAO,CAACI,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MACtE,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,IAAI,CAACK,KAAK,CAACJ,QAAQ,CAAC,EAAE;QACxCL,MAAM,CAACI,QAAQ,GAAGA,QAAQ;QAC1BJ,MAAM,CAACK,QAAQ,GAAGA,QAAQ;MAC5B;IACF;IACA,IAAIN,OAAO,CAACW,WAAW,EAAEV,MAAM,CAACU,WAAW,GAAGX,OAAO,CAACW,WAAW;IAEjE,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,aAAa,EAAE;MAAEG;IAAO,CAAC,CAAC;IAC1E,OAAOW,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,EAAE,IAAK;EAC9C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,eAAeqB,EAAE,EAAE,CAAC;IACpE,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC/D,MAAMF,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}